{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { McpServer } from \"@modelcontextprotocol/sdk/server/mcp.js\";\r\nimport { StdioServerTransport } from \"@modelcontextprotocol/sdk/server/stdio.js\";\r\nimport { z } from \"zod\";\r\n\r\n// Create server instance\r\nconst server = new McpServer({\r\n  name: \"local-mcp\",\r\n  version: \"1.0.0\",\r\n  capabilities: {\r\n    resources: {},\r\n    tools: {},\r\n  },\r\n});\r\n\r\nserver.tool(\r\n  \"get-db-status\",\r\n  \"Get Database status\",\r\n  {\r\n    machine: z.string().describe(\"machine id\"),\r\n  },\r\n  async ({ machine }) => {\r\n    console.log(machine);\r\n    return {\r\n      content: [\r\n        {\r\n          type: \"text\",\r\n          text: \"Machine status is active\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n);\r\n\r\nasync function main() {\r\n  const transport = new StdioServerTransport();\r\n  await server.connect(transport);\r\n  console.log(\"Local MCP Server running on stdio\");\r\n}\r\n\r\nmain().catch((error) => {\r\n  console.error(\"Fatal error in main():\", error);\r\n  process.exit(1);\r\n});\r\n"],"mappings":";AAAA,SAAS,iBAAiB;AAC1B,SAAS,4BAA4B;AACrC,SAAS,SAAS;AAGlB,IAAM,SAAS,IAAI,UAAU;AAAA,EAC3B,MAAM;AAAA,EACN,SAAS;AAAA,EACT,cAAc;AAAA,IACZ,WAAW,CAAC;AAAA,IACZ,OAAO,CAAC;AAAA,EACV;AACF,CAAC;AAED,OAAO;AAAA,EACL;AAAA,EACA;AAAA,EACA;AAAA,IACE,SAAS,EAAE,OAAO,EAAE,SAAS,YAAY;AAAA,EAC3C;AAAA,EACA,OAAO,EAAE,QAAQ,MAAM;AACrB,YAAQ,IAAI,OAAO;AACnB,WAAO;AAAA,MACL,SAAS;AAAA,QACP;AAAA,UACE,MAAM;AAAA,UACN,MAAM;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAEA,eAAe,OAAO;AACpB,QAAM,YAAY,IAAI,qBAAqB;AAC3C,QAAM,OAAO,QAAQ,SAAS;AAC9B,UAAQ,IAAI,mCAAmC;AACjD;AAEA,KAAK,EAAE,MAAM,CAAC,UAAU;AACtB,UAAQ,MAAM,0BAA0B,KAAK;AAC7C,UAAQ,KAAK,CAAC;AAChB,CAAC;","names":[]}